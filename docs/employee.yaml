openapi: 3.0.0
info:
  title: Employee Management API
  version: 1.0.0
  description: "Employees API"
paths:
  /auth:
    post:
      summary: Authenticate a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
      responses:
        "200":
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
  /employees:
    get:
      summary: Retrieve a list of employees
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of employees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Employee"
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
    post:
      summary: Add a new employee
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewEmployee"
      responses:
        "201":
          description: Employee created and list of employees returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Employee"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
    delete:
      summary: Delete an employee by ID
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteEmployee"
      responses:
        "200":
          description: Employee deleted and list of remaining employees returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Employee"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Employee not found
        "500":
          description: Internal server error
  /employees/{userId}:
    get:
      summary: Retrieve an employee by userId
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: The ID of the employee
      responses:
        "200":
          description: A single employee
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employee"
        "401":
          description: Unauthorized
        "404":
          description: Employee not found
        "500":
          description: Internal server error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AuthRequest:
      type: object
      properties:
        user:
          type: string
          example: "walt2"
        pwd:
          type: string
          example: "Aa$12345"
    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySW5mbyI6eyJ1c2VybmFtZSI6IndhbHQyIiwicm9sZXMiOlsyMDAxLDE5ODRdfSwiaWF0IjoxNzIxNjA2MjE2LCJleHAiOjE3MjE2MDYyNzZ9.7E-C0xJhOg58Or8QeisGVqedhXEfNVpZUm3gD9EUSsE"
    Employee:
      type: object
      properties:
        id:
          type: integer
          example: 1
        firstname:
          type: string
          example: "Dave"
        lastname:
          type: string
          example: "Gray"
    NewEmployee:
      type: object
      properties:
        firstname:
          type: string
          example: "John"
        lastname:
          type: string
          example: "Doe"
    DeleteEmployee:
      type: object
      properties:
        id:
          type: integer
          example: 2
